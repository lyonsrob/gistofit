{
  "name": "logcat",
  "author": {
    "name": "Spirin Vladimir",
    "email": "spirin.vladimir@gmail.com"
  },
  "dependencies": {
    "express.io": "*",
    "colors": "*"
  },
  "version": "0.0.4",
  "scripts": {
    "test": "mocha test/app.js"
  },
  "description": "[![Dependency Status](https://gemnasium.com/spirinvladimir/logcat.png)](https://gemnasium.com/spirinvladimir/logcat)",
  "main": "app.js",
  "devDependencies": {
    "supertest": "~0.5.1",
    "should": "~1.2.2"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/spirinvladimir/logcat.git"
  },
  "bin": {
    "logcat": "./bin/logcat"
  },
  "keywords": [
    "adb",
    "logcat",
    "viewer"
  ],
  "license": "BSD",
  "gitHead": "c61ed2f62335192a6a9fe3504da90d4c644b7d03",
  "readme": "# logcat #\n\n[![Dependency Status](https://gemnasium.com/spirinvladimir/logcat.png)](https://gemnasium.com/spirinvladimir/logcat)\n\n## How to start using:\n\n install:\n\n    $ npm install -g logcat\n\n use\n\n    $ logcat\n\n## Description:\n\n This is tool for debug android applications.\n\n## Screen shots:\n\n In console:\n\n[ ![alt](https://raw.github.com/spirinvladimir/logcat/master/public/img/console-128x128.png) ](https://raw.github.com/spirinvladimir/logcat/master/public/img/console.png)\n\n In browser, open <http://localhost>:\n\n[ ![alt](https://raw.github.com/spirinvladimir/logcat/master/public/img/web-128x128.png) ](https://raw.github.com/spirinvladimir/logcat/master/public/img/web.png)\n\n## You can edit app.js:\n\n  * Change default command 'adb logcat'\n  * Change default port(80)\n  * Add any string in `state` variable as you want\n  * ...\n\n```js\nvar util = require('util'),\n\tcolors = require('colors'),\n\tapp = require('express.io')(),\n\tspawn = require('child_process').spawn,\n\tstate = {\n\t\t'success': ['success', 'D\\/DroidGap', 'D\\/CordovaLog'],\n\t\t'error': ['error', 'E\\/'],\n\t\t'warning': ['warning', 'W\\/Web Console'],\n\t\t'info': ['info']\n\t},\n\tlogcat = spawn('adb', ['logcat']);\n\napp.http().io();\napp.get('/', function(req, res) {res.sendfile(__dirname + '/public/client.html');});\napp.get('/js/jquery-1.9.1.min.js', function(req, res) {res.sendfile(__dirname + '/public/js/jquery-1.9.1.min.js');});\napp.get('/js/bootstrap.min.js', function(req, res) {res.sendfile(__dirname + '/public/js/bootstrap.min.js');});\napp.get('/css/bootstrap.min.css', function(req, res) {res.sendfile(__dirname + '/public/css/bootstrap.min.css');});\n\nvar parseStdout = function(data, _class) {\n\tdata.toString().split('\\n').forEach(function(line) {\n\t\tif(line != '') {\n\t\t\tvar type = ['info'];\n\t\t\tif(state.hasOwnProperty(_class)) {\n\t\t\t\ttype.push(_class);\n\t\t\t} else {\n\t\t\t\tObject.keys(state).forEach(function(k) {\n\t\t\t\t\tif(util.isArray(state[k])) {\n\t\t\t\t\t\tstate[k].forEach(function(rx) {\n\t\t\t\t\t\t\tvar r = new RegExp(rx);\n\t\t\t\t\t\t\tif(r.test(line)) {\n\t\t\t\t\t\t\t\ttype.push(k);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tif(type.indexOf('error') >= 0) {\n\t\t\t\tconsole.log(line.red.bold);\n\t\t\t\tapp.io.broadcast('line', {'line': line, 'type': 'error'});\n\t\t\t} else if(type.indexOf('warning') >= 0) {\n\t\t\t\tconsole.log(line.yellow.bold);\n\t\t\t\tapp.io.broadcast('line', {'line': line, 'type': 'warning'});\n\t\t\t} else if(type.indexOf('success') >= 0) {\n\t\t\t\tconsole.log(line.green.bold);\n\t\t\t\tapp.io.broadcast('line', {'line': line, 'type': 'success'});\n\t\t\t} else {\n\t\t\t\tconsole.log(line.blue.bold);\n\t\t\t\tapp.io.broadcast('line', {'line': line, 'type': type[0]});\n\t\t\t}\n\t\t}\n\t});\n};\n\nlogcat.stdout.on('data', function(data){parseStdout(data);});\n\nlogcat.stderr.on('data', function(data){parseStdout(data, 'error');});\n\nlogcat.on('exit', function (code) {\n\tlogcat = spawn('adb', ['logcat']);\n});\n\napp.listen(80);\n```\n\n## You can edit /public/client.html:\n\n```html\n<html>\n\t<head>\n\t\t<title>adb logcat</title>\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t<link href=\"css/bootstrap.min.css\" rel=\"stylesheet\" media=\"screen\">\n\t\t<script src=\"js/jquery-1.9.1.min.js\"></script>\n\t\t<script src=\"js/bootstrap.min.js\"></script>\n\t\t<script src=\"/socket.io/socket.io.js\"></script>\n\t\t<script>\n\t\t\tif (document.addEventListener) {\n\t\t\t\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t\t\t\tvar socket = io.connect();\n\t\t\t\t\tvar table = document.createElement(\"tbody\");\n\t\t\t\t\tdocument.getElementsByTagName(\"table\")[0].appendChild(table);\n\t\t\t\t\tvar firstChild = table.firstChild;\n\t\t\t\t\tsocket.on('line', function (x) {\n\t\t\t\t\t\tvar tr = document.createElement(\"tr\");\n\t\t\t\t\t\ttr.appendChild(document.createElement(\"td\")).appendChild(document.createTextNode(x.line));\n\t\t\t\t\t\ttr.setAttribute(\"class\", x.type);\n\t\t\t\t\t\ttable.insertBefore(tr, firstChild);\n\t\t\t\t\t\tfirstChild = tr;\n\t\t\t\t\t});\n\t\t\t\t}, false);\n\t\t\t}\n\t\t</script>\n\t</head>\n\t<body><table class=\"table table-striped table-bordered table-hover\"></table></body>\n</html>\n```\n\n&copy; Spirin Vladimir\n\n[![githalytics.com alpha](https://cruel-carlota.pagodabox.com/f47d675d50eb1ba7a9c294acd689b9a8 \"githalytics.com\")](http://githalytics.com/spirinvladimir/logcat)\n",
  "readmeFilename": "README.md",
  "_id": "logcat@0.0.4",
  "dist": {
    "shasum": "aa0e6e220ef57647fcaa86c1ba77f1da3f9a4f2c",
    "tarball": "http://registry.npmjs.org/logcat/-/logcat-0.0.4.tgz"
  },
  "_from": "logcat@",
  "_npmVersion": "1.2.12",
  "_npmUser": {
    "name": "spirinvladimir",
    "email": "spirin.vladimir@gmail.com"
  },
  "maintainers": [
    {
      "name": "spirinvladimir",
      "email": "spirin.vladimir@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "aa0e6e220ef57647fcaa86c1ba77f1da3f9a4f2c",
  "_resolved": "https://registry.npmjs.org/logcat/-/logcat-0.0.4.tgz"
}
